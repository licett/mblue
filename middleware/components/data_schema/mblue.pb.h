/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Thu Feb 22 15:44:39 2018. */

#ifndef PB_MBLUE_PB_H_INCLUDED
#define PB_MBLUE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _dl_array {
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_array) */
} dl_array;

typedef struct _dl_1 {
    int32_t num;
/* @@protoc_insertion_point(struct:dl_1) */
} dl_1;

typedef struct _dl_11 {
    int32_t num1;
    int32_t num2;
/* @@protoc_insertion_point(struct:dl_11) */
} dl_11;

typedef struct _dl_111 {
    int32_t num1;
    int32_t num2;
    int32_t num3;
/* @@protoc_insertion_point(struct:dl_111) */
} dl_111;

typedef struct _dl_1111 {
    int32_t num1;
    int32_t num2;
    int32_t num3;
    int32_t num4;
/* @@protoc_insertion_point(struct:dl_1111) */
} dl_1111;

typedef struct _dl_1112 {
    int32_t num1;
    int32_t num2;
    int32_t num3;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_1112) */
} dl_1112;

typedef struct _dl_112 {
    int32_t num1;
    int32_t num2;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_112) */
} dl_112;

typedef struct _dl_113 {
    int32_t num1;
    int32_t num2;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_113) */
} dl_113;

typedef struct _dl_12 {
    int32_t num;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_12) */
} dl_12;

typedef struct _dl_ack {
    int32_t ack;
    int32_t seq;
/* @@protoc_insertion_point(struct:dl_ack) */
} dl_ack;

typedef struct _dl_at_request {
    int32_t at_set;
    int32_t cmd_index;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_at_request) */
} dl_at_request;

typedef struct _dl_mblue_message {
    bool has_magic;
    uint32_t magic;
    uint32_t info;
    uint32_t code;
    pb_callback_t src;
    pb_callback_t dst;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_mblue_message) */
} dl_mblue_message;

typedef struct _dl_rpc_header {
    char method_name[32];
    int32_t layout_index;
/* @@protoc_insertion_point(struct:dl_rpc_header) */
} dl_rpc_header;

typedef struct _dl_server_event {
    int32_t type;
    bool has_value;
    int32_t value;
/* @@protoc_insertion_point(struct:dl_server_event) */
} dl_server_event;

typedef struct _dl_server_init {
    char channel[16];
    char product[16];
    int32_t device_type;
    char device_id[28];
    char imei[16];
    char iccid[24];
    char firmware_version[16];
/* @@protoc_insertion_point(struct:dl_server_init) */
} dl_server_init;

typedef struct _dl_server_setup {
    int32_t key;
    bool has_value;
    int32_t value;
/* @@protoc_insertion_point(struct:dl_server_setup) */
} dl_server_setup;

typedef struct _dl_server_touch {
    int32_t lng;
    int32_t lat;
    int32_t satellites;
    int32_t power;
    int32_t rssi;
    int32_t interval;
    int32_t type;
    int32_t acc;
/* @@protoc_insertion_point(struct:dl_server_touch) */
} dl_server_touch;

typedef struct _dl_uart_request {
    int32_t com;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:dl_uart_request) */
} dl_uart_request;

typedef struct _dl_uart_response {
    int32_t len;
/* @@protoc_insertion_point(struct:dl_uart_response) */
} dl_uart_response;

/* Default values for struct fields */

/* Initializer values for message structs */
#define dl_rpc_header_init_default               {"", 0}
#define dl_array_init_default                    {{{NULL}, NULL}}
#define dl_at_request_init_default               {0, 0, {{NULL}, NULL}}
#define dl_uart_request_init_default             {0, {{NULL}, NULL}}
#define dl_uart_response_init_default            {0}
#define dl_mblue_message_init_default            {false, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define dl_1_init_default                        {0}
#define dl_11_init_default                       {0, 0}
#define dl_111_init_default                      {0, 0, 0}
#define dl_1111_init_default                     {0, 0, 0, 0}
#define dl_12_init_default                       {0, {{NULL}, NULL}}
#define dl_112_init_default                      {0, 0, {{NULL}, NULL}}
#define dl_113_init_default                      {0, 0, {{NULL}, NULL}}
#define dl_1112_init_default                     {0, 0, 0, {{NULL}, NULL}}
#define dl_server_init_init_default              {"", "", 0, "", "", "", ""}
#define dl_server_touch_init_default             {0, 0, 0, 0, 0, 0, 0, 0}
#define dl_server_event_init_default             {0, false, 0}
#define dl_server_setup_init_default             {0, false, 0}
#define dl_ack_init_default                      {0, 0}
#define dl_rpc_header_init_zero                  {"", 0}
#define dl_array_init_zero                       {{{NULL}, NULL}}
#define dl_at_request_init_zero                  {0, 0, {{NULL}, NULL}}
#define dl_uart_request_init_zero                {0, {{NULL}, NULL}}
#define dl_uart_response_init_zero               {0}
#define dl_mblue_message_init_zero               {false, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define dl_1_init_zero                           {0}
#define dl_11_init_zero                          {0, 0}
#define dl_111_init_zero                         {0, 0, 0}
#define dl_1111_init_zero                        {0, 0, 0, 0}
#define dl_12_init_zero                          {0, {{NULL}, NULL}}
#define dl_112_init_zero                         {0, 0, {{NULL}, NULL}}
#define dl_113_init_zero                         {0, 0, {{NULL}, NULL}}
#define dl_1112_init_zero                        {0, 0, 0, {{NULL}, NULL}}
#define dl_server_init_init_zero                 {"", "", 0, "", "", "", ""}
#define dl_server_touch_init_zero                {0, 0, 0, 0, 0, 0, 0, 0}
#define dl_server_event_init_zero                {0, false, 0}
#define dl_server_setup_init_zero                {0, false, 0}
#define dl_ack_init_zero                         {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define dl_array_data_tag                        1
#define dl_1_num_tag                             1
#define dl_11_num1_tag                           1
#define dl_11_num2_tag                           2
#define dl_111_num1_tag                          1
#define dl_111_num2_tag                          2
#define dl_111_num3_tag                          3
#define dl_1111_num1_tag                         1
#define dl_1111_num2_tag                         2
#define dl_1111_num3_tag                         3
#define dl_1111_num4_tag                         4
#define dl_1112_num1_tag                         1
#define dl_1112_num2_tag                         2
#define dl_1112_num3_tag                         3
#define dl_1112_data_tag                         4
#define dl_112_num1_tag                          1
#define dl_112_num2_tag                          2
#define dl_112_data_tag                          3
#define dl_113_num1_tag                          1
#define dl_113_num2_tag                          2
#define dl_113_data_tag                          3
#define dl_12_num_tag                            1
#define dl_12_data_tag                           2
#define dl_ack_ack_tag                           1
#define dl_ack_seq_tag                           2
#define dl_at_request_at_set_tag                 1
#define dl_at_request_cmd_index_tag              2
#define dl_at_request_data_tag                   3
#define dl_mblue_message_magic_tag               1
#define dl_mblue_message_info_tag                2
#define dl_mblue_message_code_tag                3
#define dl_mblue_message_src_tag                 4
#define dl_mblue_message_dst_tag                 5
#define dl_mblue_message_data_tag                6
#define dl_rpc_header_method_name_tag            1
#define dl_rpc_header_layout_index_tag           2
#define dl_server_event_type_tag                 1
#define dl_server_event_value_tag                2
#define dl_server_init_channel_tag               1
#define dl_server_init_product_tag               2
#define dl_server_init_device_type_tag           3
#define dl_server_init_device_id_tag             4
#define dl_server_init_imei_tag                  5
#define dl_server_init_iccid_tag                 6
#define dl_server_init_firmware_version_tag      7
#define dl_server_setup_key_tag                  1
#define dl_server_setup_value_tag                2
#define dl_server_touch_lng_tag                  1
#define dl_server_touch_lat_tag                  2
#define dl_server_touch_satellites_tag           3
#define dl_server_touch_power_tag                4
#define dl_server_touch_rssi_tag                 5
#define dl_server_touch_interval_tag             6
#define dl_server_touch_type_tag                 7
#define dl_server_touch_acc_tag                  8
#define dl_uart_request_com_tag                  1
#define dl_uart_request_data_tag                 2
#define dl_uart_response_len_tag                 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t dl_rpc_header_fields[3];
extern const pb_field_t dl_array_fields[2];
extern const pb_field_t dl_at_request_fields[4];
extern const pb_field_t dl_uart_request_fields[3];
extern const pb_field_t dl_uart_response_fields[2];
extern const pb_field_t dl_mblue_message_fields[7];
extern const pb_field_t dl_1_fields[2];
extern const pb_field_t dl_11_fields[3];
extern const pb_field_t dl_111_fields[4];
extern const pb_field_t dl_1111_fields[5];
extern const pb_field_t dl_12_fields[3];
extern const pb_field_t dl_112_fields[4];
extern const pb_field_t dl_113_fields[4];
extern const pb_field_t dl_1112_fields[5];
extern const pb_field_t dl_server_init_fields[8];
extern const pb_field_t dl_server_touch_fields[9];
extern const pb_field_t dl_server_event_fields[3];
extern const pb_field_t dl_server_setup_fields[3];
extern const pb_field_t dl_ack_fields[3];

/* Maximum encoded size of messages (where known) */
#define dl_rpc_header_size                       45
/* dl_array_size depends on runtime parameters */
/* dl_at_request_size depends on runtime parameters */
/* dl_uart_request_size depends on runtime parameters */
#define dl_uart_response_size                    11
/* dl_mblue_message_size depends on runtime parameters */
#define dl_1_size                                11
#define dl_11_size                               22
#define dl_111_size                              33
#define dl_1111_size                             44
/* dl_12_size depends on runtime parameters */
/* dl_112_size depends on runtime parameters */
/* dl_113_size depends on runtime parameters */
/* dl_1112_size depends on runtime parameters */
#define dl_server_init_size                      139
#define dl_server_touch_size                     88
#define dl_server_event_size                     22
#define dl_server_setup_size                     22
#define dl_ack_size                              22

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MBLUE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
